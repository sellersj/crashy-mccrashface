# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -V --batch-mode --update-snapshots verify
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@v5.0.0
    # All steps after this one will have env variable `MVN_PROJECT_VERSION` passed to them.
    - run: echo "MVN_PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
    - run: mkdir staging && cp target/*.jar staging
    - uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging
# disabling the cache since it actually makes the build slower by like a minute
#    - name: Cache Docker layers
#      uses: satackey/action-docker-layer-caching@v0.0.11
#      # Ignore the failure of a step and avoid terminating the job.
#      continue-on-error: true
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
# TODO sync the readme on docker hub with this
# docker hub does not support tokens to change the readme
# https://github.com/docker/hub-feedback/issues/1914#issuecomment-550402792
    - name: Build container image with Maven
      run: mvn -DskipTests spring-boot:build-image -Dspring-boot.build-image.imageName=docker.io/${{ github.repository }}:${{ env.MVN_PROJECT_VERSION }}
    - run: docker push docker.io/${{ github.repository }}:${{ env.MVN_PROJECT_VERSION }}
    # TODO put in a test or check to make sure that this is only run on main
    - run: docker tag docker.io/${{ github.repository }}:${{ env.MVN_PROJECT_VERSION }} docker.io/${{ github.repository }}:latest
    - run: docker push docker.io/${{ github.repository }}:latest

